{"version":3,"sources":["webpack:///src/@core/@models/alert.ts","webpack:///src/@core/@services/AlertService.ts","webpack:///src/app/alerts/alerts.component.html","webpack:///src/app/alerts/alerts.component.ts","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/ymap/ymap.component.ts","webpack:///src/app/ymap/ymap.component.html","webpack:///src/app/placemark/placemark.component.ts","webpack:///src/app/yandex-map/yandex-map.component.html","webpack:///src/app/placemark/placemark.component.html","webpack:///src/app/yandex-map/yandex-map.component.ts","webpack:///src/app/test/test.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/test/test.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["id","model","isNew","this","address","value","createdAt","toDate","coords","Array","push","latitude","longitude","undefined","filename","datePipe","hintContent","title","balloonContent","transform","iconColor","preset","phone","fireStore","storage","path","collection","snapshotChanges","pipe","actions1","map","a","data","payload","doc","alert","add","toModel","delete","update","AlertsComponent","alertService","get","subscribe","alerts","sort","b","getTime","console","log","forEach","marker","addTo","bindPopup","on","getLatLng","e","latlng","lat","lng","load","then","maps","Map","center","zoom","geoObjects","Placemark","catch","error","close","audio","Audio","src","play","confirm","emit","placemark","close_Click","cdr","applicationRef","$event","type","tick","detectChanges","filter","x","includes","aa","myCollection","ymaps","GeoObjectCollection","instance","removeAll","geometry","placemarkProperties","placemarkOptions","events","balloonClick","originalEvent","event","remove","TestComponent","MainComponent","routes","component","children","AppRoutingModule","forRoot","AppComponent","AppModule","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module","exports"],"mappings":"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","file":"x","sourcesContent":["import {IAlert} from './@interfaces/alert';\nimport {DatePipe} from '@angular/common';\n\nexport class Alert implements IAlert{\n\n  get address(): string {\n    return this.model.address;\n  }\n  set address(value: string) {\n    this.model.address = value;\n  }\n  get createdAt(): Date {\n    return this.model.createdAt.toDate();\n  }\n  set createdAt(value: Date) {\n    this.model.createdAt = value;\n  }\n  get geometry(): any {\n    const coords = new Array<number>();\n    coords.push(this.latitude);\n    coords.push(this.longitude);\n    return coords;\n  }\n  get filename(): string {\n    return this.model.filename === undefined ? undefined : `http://smtp.teledesk.ru/${this.model.filename}`;\n  }\n\n  get placemarkProperties(): any {\n    const datePipe = new DatePipe('en-US');\n    return  {\n      hintContent: this.title,\n      balloonContent: `<p>${datePipe.transform(this.createdAt, 'dd.MM.yyyy hh:mm')}</p>${this.title}`\n    };\n  }\n\n  get placemarkOptions(): any {\n    return {\n      iconColor: 'red',\n      preset: this.isNew ? \"islands#redCircleDotIcon\" : 'islands#redDotIcon'\n    };\n  }\n\n  get latitude(): number {\n    return this.model.latitude;\n  }\n  get longitude(): number {\n    return this.model.longitude;\n  }\n  get title(): string {\n    return this.model.title;\n  }\n  get phone(): string {\n    return this.model.phone;\n  }\n\n  isNew: boolean = false;\n\n  constructor(public id: string, private model: IAlert) {}\n  toModel(): IAlert {\n    return this.model;\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {AngularFireStorage} from \"@angular/fire/storage\";\nimport {AngularFirestore, DocumentReference} from \"@angular/fire/firestore\";\nimport {Observable} from \"rxjs\";\nimport {Alert} from \"../@models/alert\";\nimport {IAlert} from \"../@models/@interfaces/alert\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  path = 'alerts';\n  constructor(private fireStore: AngularFirestore, private storage: AngularFireStorage) { }\n\n  get(): Observable<Alert[]> {\n    return this.fireStore.collection<IAlert>(this.path)\n      .snapshotChanges().pipe(\n        map(actions1 => actions1.map(a => {\n          const data = a.payload.doc.data() as  IAlert;\n          const id = a.payload.doc.id;\n          return new Alert(id, data);\n        }))\n      );\n  }\n\n  add(alert: Alert): Promise<DocumentReference>  {\n    return this.fireStore.collection(`${this.path}`).add(alert.toModel());\n  }\n\n  delete(id: string): Promise<void> {\n    return this.fireStore.doc<IAlert>(`/${this.path}/${id}`).delete();\n  }\n\n  update(alert: Alert): Promise<void> {\n    return this.fireStore.doc<IAlert>(`/${this.path}/${alert.id}`).update(alert.toModel());\n  }\n}\n","<ng-container  *ngIf=\"alerts\">\n\n<table\n  class=\"table table-bordered\">\n  <thead>\n  <tr>\n    <th>\n      Дата создания\n    </th>\n    <th>\n      Телефон\n    </th>\n    <th>\n      Адрес\n    </th>\n    <th>\n      Долгота\n    </th>\n    <th>\n      Ширина\n    </th>\n    <th>\n      Полный адрес\n    </th>\n\n    <th>\n      Звуковой файл\n    </th>\n\n  </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let alert of alerts\">\n      <td>{{ alert.createdAt | date:'dd.MM.yyyy HH:mm:ss'  }}</td>\n      <td>{{ alert.phone }}</td>\n      <td>{{ alert.toModel().address }}</td>\n      <td>{{ alert.toModel().longitude }}</td>\n      <td>{{ alert.toModel().latitude }}</td>\n      <td>{{ alert.toModel().title }}</td>\n      <td>{{ alert.filename }}</td>\n\n    </tr>\n  </tbody>\n</table>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport {AlertService} from '../../@core/@services/AlertService';\nimport {Alert} from '../../@core/@models/alert';\n\n@Component({\n  selector: 'app-alerts',\n  templateUrl: './alerts.component.html',\n  styleUrls: ['./alerts.component.scss']\n})\nexport class AlertsComponent implements OnInit {\n\n  alerts: Alert[];\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.alertService.get().subscribe(alerts => {\n      this.alerts = alerts.sort((a, b) => {\n          return b.createdAt.getTime() - a.createdAt.getTime();\n        });;\n      console.log(alerts);\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport * as DG from '2gis-maps';\nimport {AlertService} from '../../@core/@services/AlertService';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  constructor(private alertService: AlertService) { }\n  map: DG;\n\n  ngOnInit() {\n    const self = this;\n    const map = DG.map('map', {\n      'center': [55.03573, 82.896184],\n      'zoom': 16,\n      'fullscreenControl': false\n    });\n    if (map) {\n      console.log('Map added');\n    }\n\n    this.alertService.get().subscribe(alerts => {\n      alerts.forEach(alert => {\n\n        if (alert.toModel().longitude === undefined) {\n          return;\n        }\n\n        const marker = DG.marker([alert.toModel().latitude, alert.toModel().longitude]);\n        marker.addTo(map).bindPopup(alert.toModel().title);\n        marker.on('click', () => {\n\n        });\n        console.log('Marker after adding:' + marker.getLatLng());\n      });\n    });\n\n    /*\n    map.locate()\n      .on('locationfound', function (e) {\n        this.currentUserPos = DG.marker([e.latitude, e.longitude]).addTo(map).bindLabel('Your location', {\n          static: true\n        });\n        const currentCenter = new DG.latLng(e.latitude, e.longitude);\n        console.log('Current position founded: ' + 'lat = ' + e.latitude + '; lng = ' + e.longitude);\n        map.setView(currentCenter, 16);\n      });\n*/\n    map.on('click', function (e) {\n      const marker = DG.marker([e.latlng.lat, e.latlng.lng]);\n      /*\n      marker.addTo(map);\n      marker.on('click', function() {\n        marker.remove(map);\n        //    self.mapService.deleteMarkerFromList(e.latlng.lat, e.latlng.lng);\n      });\n\n       */\n      console.log('Marker after adding:' + marker.getLatLng());\n      // self.mapService.addMarkerToList(e.latlng.lat, e.latlng.lng);\n    });\n  }\n\n}\n","<div id=\"map\" style=\"width:100%; height:800px;\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport ymaps from 'ymaps';\nimport {AlertService} from '../../@core/@services/AlertService';\n\n@Component({\n  selector: 'app-ymap',\n  templateUrl: './ymap.component.html',\n  styleUrls: ['./ymap.component.scss']\n})\nexport class YmapComponent implements OnInit {\n\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit() {\n    ymaps\n      .load()\n      .then(maps => {\n        const map = new maps.Map('map', {\n          center: [55.030199, 82.92043],\n          zoom: 16\n        });\n\n\n\n        this.alertService.get().subscribe(alerts => {\n          alerts.forEach(alert => {\n\n            if (alert.toModel().longitude === undefined) {\n              return;\n            }\n\n            map.geoObjects.add(new ymaps.Placemark([55.642063, 37.656123], {\n              balloonContent: 'цвет <strong>красный</strong>'\n            }, {\n              preset: 'islands#redSportIcon'\n            }));\n\n          });\n        });\n\n\n      })\n      .catch(error => console.log('Failed to load Yandex Maps', error));\n  }\n\n}\n","<div id=\"map\" style=\"width:100%; height:700px;\"></div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Alert} from '../../@core/@models/alert';\nimport {AlertService} from '../../@core/@services/AlertService';\n\n@Component({\n  selector: 'app-placemark',\n  templateUrl: './placemark.component.html',\n  styleUrls: ['./placemark.component.scss']\n})\nexport class PlacemarkComponent implements OnInit {\n  @Input() alert: Alert;\n  @Input() placemark: any;\n  @Output() close = new EventEmitter();\n\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit(): void {\n  }\n\n async play() {\n    const audio = new Audio();\n    audio.src = this.alert.filename;\n    audio.load();\n    await audio.play();\n  }\n\n   async close_Click() {\n    if (confirm(`Вы действительно хотите закрыть заявку  ${this.alert.address}?`)) {\n      this.close.emit(this.placemark);\n      await this.alertService.delete(this.alert.id);\n    }\n  }\n}\n","\n  <angular-yandex-map [center]=\"[55.030199, 82.92043]\"\n                      (load)=\"load($event)\"\n                      [zoom]=\"12\" >\n\n\n  </angular-yandex-map>\n\n  <app-placemark *ngIf=\"alert\" [alert]=\"alert\" [placemark]=\"placemark\" (close)=\"close($event)\">\n\n  </app-placemark>\n\n","<p>{{ alert.createdAt | date: 'dd.MM.yyyy hh:mm' }}</p>\n<p>{{ alert.title }}</p>\n<p>{{ alert.phone }}</p>\n<p>\n  <button (click)=\"play()\">Прослушать</button>\n</p>\n<p>\n  <button (click)=\"close_Click()\">Закрыть</button>\n</p>\n\n","import {ApplicationRef, ChangeDetectorRef, Component, ContentChildren, OnInit, QueryList} from '@angular/core';\nimport {AlertService} from '../../@core/@services/AlertService';\nimport {Alert} from '../../@core/@models/alert';\n\ndeclare var ymaps: any;\n\n@Component({\n  selector: 'app-yandex-map',\n  templateUrl: './yandex-map.component.html',\n  styleUrls: ['./yandex-map.component.scss']\n})\nexport class YandexMapComponent implements OnInit {\n  alerts: Alert[] | undefined = undefined;\n  alert: Alert | undefined;\n  placemark: any;\n  map: any;\n\n  constructor(private alertService: AlertService,\n              private cdr: ChangeDetectorRef,\n              private applicationRef: ApplicationRef ) { }\n\n  ngOnInit() {\n\n  }\n\n  balloonClick($event) {\n    console.log($event);\n    if ($event.type === 'balloonopen') {\n      this.alert = $event.alert;\n      this.placemark = $event.placemark;\n    } else {\n      this.alert = undefined;\n      this.placemark = undefined;\n    }\n    this.applicationRef.tick();\n    this.cdr.detectChanges();\n  }\n\n  load($event) {\n    this.map = $event;\n    console.log('load');\n    console.log(this.map);\n\n\n    this.alertService.get().subscribe(alerts => {\n      if (alerts === null) {\n        return;\n      }\n\n      if (this.alerts) {\n        alerts.filter(x => !this.alerts.map(a => a.id).includes(x.id)).forEach( async (aa) => {\n          aa.isNew = true;\n          console.log(aa)\n          const audio = new Audio();\n          audio.src = aa.filename;\n          audio.load();\n          await audio.play();\n        });\n      }\n\n      this.alerts = alerts;\n\n      const myCollection = new ymaps.GeoObjectCollection();\n\n      // добавляем коллекцию на карту\n      this.map.instance.geoObjects.add(myCollection);\n\n      myCollection.removeAll();\n\n      alerts.forEach(alert => {\n        const placemark = new ymaps.Placemark(alert.geometry, alert.placemarkProperties, alert.placemarkOptions);\n\n        placemark.events\n          .add(\n            ['balloonopen', 'balloonclose'],\n            (e: any) => this.balloonClick({ ymaps, instance: placemark, type: e.originalEvent.type, event: e, alert, placemark})\n          );\n\n        this.map.instance.geoObjects.add(placemark);\n\n      });\n\n\n\n      // this.map.instance.container.fitToViewport();\n\n\n\n\n      // this.applicationRef.tick();\n      // this.cdr.detectChanges();\n\n\n    });\n\n  }\n\n  close($event: any) {\n    console.log($event);\n    this.map.instance.geoObjects.remove($event);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container *ngIf=\"alerts\">\n  <ng-container *ngFor=\"let alert of alerts\">\n    <p>\n      <span>{{ alert.createdAt | date:'dd.MM.yyyy HH:mm:ss'  }}</span>\n      {{ alert.title }}\n      <button *ngIf=\"alert.filename\" nbButton (click)=\"play(alert)\">Прослушать</button>\n    </p>\n  </ng-container>\n</ng-container>\n","<p>test works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {AlertService} from '../../@core/@services/AlertService';\nimport {Alert} from '../../@core/@models/alert';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  alerts: Alert[];\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit(): void {\n    this.alertService.get().subscribe(alerts => {\n      this.alerts = alerts.sort((a, b) => {\n        return b.createdAt.getTime() - a.createdAt.getTime();\n      });;\n      console.log(alerts);\n    });\n  }\n\n  async play(alert: Alert) {\n    console.log(alert);\n    const audio = new Audio();\n    audio.src = alert.filename;\n    audio.load();\n    await audio.play();\n  }\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  change() {\n    console.log('tets');\n  }\n}\n","<div class=\"map\">\n  <router-outlet></router-outlet>\n</div>\n\n<div class=\"panel\">\n  <app-sidebar>\n\n  </app-sidebar>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AppComponent} from './app.component';\nimport {AlertsComponent} from './alerts/alerts.component';\nimport {MapComponent} from './map/map.component';\nimport {YmapComponent} from './ymap/ymap.component';\nimport {YandexMapComponent} from './yandex-map/yandex-map.component';\nimport {TestComponent} from './test/test.component';\nimport {MainComponent} from './main/main.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: MainComponent, children: [\n      { path: '', component: YandexMapComponent },\n      { path: 'alerts', component: AlertsComponent },\n      { path: 'map', component: MapComponent },\n      { path: 'ymap', component: YmapComponent },\n      { path: 'yamap', component: YandexMapComponent },\n      { path: 'test', component: TestComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'MapAlert';\n  constructor() {\n    console.log(this.title);\n  }\n}\n","<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {CommonModule} from '@angular/common';\nimport { AlertsComponent } from './alerts/alerts.component';\nimport { MapComponent } from './map/map.component';\n\nimport {AngularFireDatabaseModule} from \"@angular/fire/database\";\nimport {AngularFireStorageModule} from \"@angular/fire/storage\";\nimport {AngularFireModule} from '@angular/fire';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport { YmapComponent } from './ymap/ymap.component';\nimport { AngularYandexMapsModule } from 'angular8-yandex-maps';\nimport { YandexMapComponent } from './yandex-map/yandex-map.component';\nimport {NbLayoutModule, NbSidebarModule, NbSidebarService, NbThemeModule} from '@nebular/theme';\nimport {FormsModule} from '@angular/forms';\nimport {TestComponent} from './test/test.component';\nimport {MainComponent} from './main/main.component';\nimport { AngularSplitModule } from 'angular-split';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { PlacemarkComponent } from './placemark/placemark.component';\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyBzrzVtwElCgMQnSNUODhQlwh24jUetIRI\",\n  authDomain: \"mapalert-99b0c.firebaseapp.com\",\n  databaseURL: \"https://mapalert-99b0c.firebaseio.com\",\n  projectId: \"mapalert-99b0c\",\n  storageBucket: \"mapalert-99b0c.appspot.com\",\n  messagingSenderId: \"1025639036588\",\n  appId: \"1:1025639036588:web:c1f54cf30d57f54213d109\",\n  measurementId: \"G-0931XJ839Q\"\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlertsComponent,\n    MapComponent,\n    YmapComponent,\n    YandexMapComponent,\n    TestComponent,\n    MainComponent,\n    SidebarComponent,\n    PlacemarkComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    AngularFireModule.initializeApp(firebaseConfig), AngularFirestoreModule, AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    AngularYandexMapsModule.forRoot('881d7e11-b250-45a9-b8c8-051f61f50266'),\n    NbThemeModule.forRoot(), NbLayoutModule, NbSidebarModule,\n    AngularSplitModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [NbSidebarService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}